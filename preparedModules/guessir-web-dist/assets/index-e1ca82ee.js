var T=Object.defineProperty;var R=(i,e,t)=>e in i?T(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var l=(i,e,t)=>(R(i,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();var E=(i=>(i.Word="w",i.SpecialCharacter="sc",i.Letter="l",i.WordHelping="wh",i))(E||{});const m=class{static syncCase(e,t){return t[0]!==e[0]&&t[0].toUpperCase()===e[0]&&(t=t[0].toUpperCase()+t.substring(1)),t}static convertNormalizedWord(e,t){const s=m.NORMALIZED_WORDS_TO_NORMALIZED_WORDS.get(t)||t;return this.syncCase(e,s)}static normalizeCharacter(e){const t=e.toLowerCase();return m.CHARACTERS_TO_NORMALIZED_CHARACTERS.get(t)||t}static uncontractPrimitiveLexeme(e){const t=m.NORMALIZED_CONTRACTION_TO_NORMALIZED_NORMAL.get(e.toLowerCase());return t?this.syncCase(e,t):e}static isWordCharacter(e){if(e.length!==1)throw new Error("Can be used only for characters");return m.isLetter(e)||m.isWordHelpingCharacter(e)}static isLetter(e){return m.LETTER_RE.test(e)}static isWordHelpingCharacter(e){return m.NORMALIZED_CONTRACTION_CHARACTERS.includes(e)||m.NORMALIZED_WORD_SEPARATION_CHARACTERS.includes(e)}static getLexemeType(e){return e.normalized.length===1?m.isWordHelpingCharacter(e.normalized)?E.WordHelping:m.isLetter(e.normalized)?E.Letter:E.SpecialCharacter:E.Word}static getGroupingWords(e){const t=e.length,s=e.toLowerCase();return["s","d"].includes(s[t-1])&&s[t-2]==="'"?[s.slice(0,-2),s]:[s]}static isLexemeOtherCharacter(e){return e.type===E.SpecialCharacter||e.type===E.WordHelping}};let d=m;l(d,"CHARACTERS_TO_NORMALIZED_CHARACTERS",new Map([["—","-"],["’","'"],["`","'"]])),l(d,"NORMALIZED_WORDS_TO_NORMALIZED_WORDS",new Map([["i","I"]])),l(d,"NORMALIZED_CONTRACTION_CHARACTERS",["'"]),l(d,"NORMALIZED_WORD_SEPARATION_CHARACTERS",["-"]),l(d,"LETTER_RE",/^[A-Za-z]$/),l(d,"NORMALIZED_CONTRACTION_TO_NORMALIZED_NORMAL",new Map([["don't","do not"],["doesn't","does not"],["didn't","did not"],["haven't","have not"],["hadn't","had not"],["shouldn't","should"],["wouldn't","would not"],["couldn't","could not"],["mustn't","must not"],["can't","cannot"],["needn't","need not"],["won't","will not"],["I'm","I am"],["I've","I have"],["I'll","I will"],["she'll","she will"],["he'll","he will"],["we're","we are"],["we've","we have"],["we'll","we will"],["they're","they are"],["they've","they have"],["they'll","they will"]]));class y{constructor(){l(this,"lexemes",new Map);l(this,"lexemesByWordLike",new Map);l(this,"wordLikeCount",0);l(this,"otherCharacterCount",0);l(this,"lastLexemeIndex",-1)}addLexeme(e){const t=++this.lastLexemeIndex;this.lexemes.set(t,e),d.isLexemeOtherCharacter(e)?this.otherCharacterCount++:(this.wordLikeCount++,d.getGroupingWords(e.normalized).forEach(s=>{const n=this.lexemesByWordLike.get(s)||new Map;n.set(t,e),this.lexemesByWordLike.set(s,n)}))}deleteLastLexemesUntilMatch(e){let t=this.lexemes.get(this.lastLexemeIndex);for(;t&&e(t);)d.isLexemeOtherCharacter(t)?this.otherCharacterCount--:(this.wordLikeCount--,d.getGroupingWords(t.normalized).forEach(s=>{const n=this.lexemesByWordLike.get(s)||new Map;n.delete(this.lastLexemeIndex),n.size||this.lexemesByWordLike.delete(s)})),this.lexemes.delete(this.lastLexemeIndex),this.lastLexemeIndex--,t=this.lexemes.get(this.lastLexemeIndex);return!0}isLastNLexemesMatch(e,t){let s=this.lastLexemeIndex;for(;e>0;){const n=this.lexemes.get(s);if(!n||!t(n))return!1;s--,e--}return!0}}class x{static createEmptyBuffer(){return{primitiveLexeme:"",normalizedPrimitiveLexeme:"",startIndex:void 0}}static accumulateCharacterToWordInBuffer(e,t,s,n){e.primitiveLexeme=e.primitiveLexeme+t,e.normalizedPrimitiveLexeme=e.normalizedPrimitiveLexeme+s,n&&(e.normalizedPrimitiveLexeme=d.convertNormalizedWord(e.primitiveLexeme,e.normalizedPrimitiveLexeme))}static setCharacterAsBuffer(e,t,s){e.primitiveLexeme=t,e.normalizedPrimitiveLexeme=s}static splitUncontractedLexeme(e,t,s){const n=e.uncontracted.split(" "),r=[];return n.forEach((o,a)=>{r.push({original:e.original,normalized:d.convertNormalizedWord(e.original,o),startIndex:t,endIndex:s}),a<n.length-1&&r.push({original:" ",normalized:" ",startIndex:t,endIndex:s})}),r}}const p=class{static analyze(e){const t=e.trim(),s=new y;let n=x.createEmptyBuffer();for(let r=0,o=t.length;r<o;r++){let a=!1;const h=t[r],c=t[r+1],u=d.normalizeCharacter(h),w=c===void 0?void 0:d.normalizeCharacter(c),C=w===void 0||!d.isWordCharacter(w);n.startIndex===void 0&&(n.startIndex=r),d.isWordCharacter(u)?(x.accumulateCharacterToWordInBuffer(n,h,u,C),a=C):(x.setCharacterAsBuffer(n,h,u),a=!0),a&&(p.processPrimitiveLexeme(s,n.primitiveLexeme,n.normalizedPrimitiveLexeme,n.startIndex,r),n=x.createEmptyBuffer())}return{lexemes:s.lexemes,lexemesByWordLike:s.lexemesByWordLike,wordLikeCount:s.wordLikeCount,otherCharacterCount:s.otherCharacterCount}}static processPrimitiveLexeme(e,t,s,n,r,o={}){const{onCreated:a}=o,h={endIndex:r,startIndex:n,original:t,normalized:s,uncontracted:d.uncontractPrimitiveLexeme(s)},c={...h,type:d.getLexemeType(h)};if(c.uncontracted!==c.normalized){p.processPrimitiveUncontractedLexeme(e,c,n,r);return}const u=e.isLastNLexemesMatch(1,f=>f.normalized===" "),w=p.PUNCTUATION_CHARACTERS.includes(c.normalized),C=c.normalized===`
`;(u&&w||u&&C)&&e.deleteLastLexemesUntilMatch(f=>f.normalized===" "),p.canAddLexeme(e,c)&&(e.addLexeme(c),a&&a(c))}static processPrimitiveUncontractedLexeme(e,t,s,n){const r=o=>o.uncontracted=t.uncontracted;x.splitUncontractedLexeme(t,s,n).forEach(({original:o,normalized:a,startIndex:h,endIndex:c})=>this.processPrimitiveLexeme(e,o,a,h,c,{onCreated:r}))}static canAddLexeme(e,t){return e.lexemes.get(e.lastLexemeIndex)?t.normalized===`
`&&e.isLastNLexemesMatch(2,r=>r.normalized===`
`)?!1:!(t.normalized===" "&&e.isLastNLexemesMatch(1,r=>r.normalized===" ")):t.type===E.Word||t.type===E.Letter}};let L=p;l(L,"PUNCTUATION_CHARACTERS",[",",".","!","?",";"]);class g{constructor(){l(this,"subscribers",new Set);l(this,"event",{subscribe:e=>this.subscribe(e),unsubscribe:e=>this.unsubscribe(e)})}publish(e){this.subscribers.forEach(t=>t(e))}subscribe(e){if(this.subscribers.has(e))throw new Error("Provided subscriber is already subscribed");this.subscribers.add(e)}unsubscribe(e){this.subscribers.delete(e)}}const b=(i,e,t={})=>{i.addEventListener("keypress",s=>{s.key!=="Enter"&&s.key!=="NumpadEnter"||(t.toggleChecked&&(i.checked=!i.checked),e(s))})},v=(i,e,t={})=>{i.addEventListener("change",s=>{e(s)}),b(i,e,t)};class I{constructor(e={}){l(this,"containerElement");l(this,"guessPubSub",new g);l(this,"showFirstLettersPubSub",new g);l(this,"showTextPubSub",new g);l(this,"isTextShown",!1);l(this,"isFirstLettersShown",!1);l(this,"guessEvent",this.guessPubSub.event);l(this,"showFirstLettersEvent",this.showFirstLettersPubSub.event);l(this,"showTextEvent",this.showTextPubSub.event);const{allowShowingFirstLetters:t,allowShowingText:s}=e;this.containerElement=document.createElement("div"),this.containerElement.id="controls-container",this.initElement(s,t)}getElement(){return this.containerElement}clearAndFocusGuessInput(){const{guessInputElement:e,guessButtonElement:t}=this.getElements();e.value="",e.focus(),t.disabled=!0}shakeAndError(){const{guessInputElement:e}=this.getElements();e.classList.add("shake-and-error");const t=()=>{e.removeEventListener("animationend",t),e.classList.remove("shake-and-error")};e.addEventListener("animationend",t)}initElement(e,t){var r,o;this.containerElement.innerHTML=`
      <input id="guess-input" type="text" />
      <button title="Please, input at least one letter to try to guess!" disabled id="guess-button" type="button">Guess</button>
      <label>
        <input type="checkbox" id="show-text-checkbox" /> Show text
      </label>
      <label>
        <input type="checkbox" id="show-first-letters-checkbox"> Show first letters
      </label>
    `;const{showTextCheckboxElement:s,showFirstLettersCheckboxElement:n}=this.getElements();e||(r=s.parentElement)==null||r.classList.add("hide"),t||(o=n.parentElement)==null||o.classList.add("hide"),this.attachGuessHandler(),this.attachShowFirstLettersHandler(),this.attachShowTextHandler(),this.attachInputHandler()}getElements(){const e=this.containerElement.querySelector("#show-text-checkbox"),t=this.containerElement.querySelector("#show-first-letters-checkbox"),s=this.containerElement.querySelector("#guess-button"),n=this.containerElement.querySelector("#guess-input");return{showTextCheckboxElement:e,showFirstLettersCheckboxElement:t,guessButtonElement:s,guessInputElement:n}}getInputtedWord(){const{guessInputElement:e}=this.getElements();return e.value.trim().toLowerCase()}attachInputHandler(){const{guessInputElement:e,guessButtonElement:t}=this.getElements();e.addEventListener("input",()=>{this.getInputtedWord()?t.disabled=!1:t.disabled=!0})}attachGuessHandler(){const{guessButtonElement:e,guessInputElement:t}=this.getElements(),s=()=>{const n=this.getInputtedWord();n&&this.guessPubSub.publish({word:n})};e.addEventListener("click",s),b(t,s)}attachShowTextHandler(){const{showTextCheckboxElement:e,showFirstLettersCheckboxElement:t}=this.getElements();v(e,()=>{this.isFirstLettersShown&&t.dispatchEvent(new Event("change")),this.isTextShown=!this.isTextShown,e.checked=this.isTextShown,this.showTextPubSub.publish(this.isTextShown)})}attachShowFirstLettersHandler(){const{showTextCheckboxElement:e,showFirstLettersCheckboxElement:t}=this.getElements();v(t,()=>{this.isTextShown&&e.dispatchEvent(new Event("change")),this.isFirstLettersShown=!this.isFirstLettersShown,t.checked=this.isFirstLettersShown,this.showFirstLettersPubSub.publish(this.isFirstLettersShown)})}}const k='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><path d="M18 21H12C11.2044 21 10.4413 20.6839 9.87868 20.1213C9.31607 19.5587 9 18.7956 9 18V12C9 11.2044 9.31607 10.4413 9.87868 9.87868C10.4413 9.31607 11.2044 9 12 9H18C18.7956 9 19.5587 9.31607 20.1213 9.87868C20.6839 10.4413 21 11.2044 21 12V18C21 18.7956 20.6839 19.5587 20.1213 20.1213C19.5587 20.6839 18.7956 21 18 21ZM12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12V18C11 18.2652 11.1054 18.5196 11.2929 18.7071C11.4804 18.8946 11.7348 19 12 19H18C18.2652 19 18.5196 18.8946 18.7071 18.7071C18.8946 18.5196 19 18.2652 19 18V12C19 11.7348 18.8946 11.4804 18.7071 11.2929C18.5196 11.1054 18.2652 11 18 11H12Z" fill="#C7C7C7"></path><path d="M9.73 15H5.67C4.96268 14.9974 4.28509 14.7152 3.78494 14.2151C3.28478 13.7149 3.00263 13.0373 3 12.33V5.67C3.00263 4.96268 3.28478 4.28509 3.78494 3.78494C4.28509 3.28478 4.96268 3.00263 5.67 3H12.33C13.0373 3.00263 13.7149 3.28478 14.2151 3.78494C14.7152 4.28509 14.9974 4.96268 15 5.67V9.4H13V5.67C13 5.49231 12.9294 5.32189 12.8038 5.19624C12.6781 5.07059 12.5077 5 12.33 5H5.67C5.49231 5 5.32189 5.07059 5.19624 5.19624C5.07059 5.32189 5 5.49231 5 5.67V12.33C5 12.5077 5.07059 12.6781 5.19624 12.8038C5.32189 12.9294 5.49231 13 5.67 13H9.73V15Z" fill="#C7C7C7"></path></svg>';function W(i){var e=[];if(i.length===0)return"";if(typeof i[0]!="string")throw new TypeError("Url must be a string. Received "+i[0]);if(i[0].match(/^[^/:]+:\/*$/)&&i.length>1){var t=i.shift();i[0]=t+i[0]}i[0].match(/^file:\/\/\//)?i[0]=i[0].replace(/^([^/:]+):\/*/,"$1:///"):i[0]=i[0].replace(/^([^/:]+):\/*/,"$1://");for(var s=0;s<i.length;s++){var n=i[s];if(typeof n!="string")throw new TypeError("Url must be a string. Received "+n);n!==""&&(s>0&&(n=n.replace(/^[\/]+/,"")),s<i.length-1?n=n.replace(/[\/]+$/,""):n=n.replace(/[\/]+$/,"/"),e.push(n))}var r=e.join("/");r=r.replace(/\/(\?|&|#[^!])/g,"$1");var o=r.split("?");return r=o.shift()+(o.length>0?"?":"")+o.join("&"),r}function S(){var i;return typeof arguments[0]=="object"?i=arguments[0]:i=[].slice.call(arguments),W(i)}async function O(i){try{const e=await fetch(S("https://guessir-api.k-k.io","texts"),{method:"POST",body:JSON.stringify(i),headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error("Request failed");return await e.json()}catch{throw new Error("Could not create text")}}function A(i){return`${window.location.origin}?textId=${i.id}`}function H(){return!!new URLSearchParams(window.location.search).get("textId")}function U(){const e=new URLSearchParams(window.location.search).get("textId");if(!e)throw new Error("Text ID is empty");return e}async function P(i){const e=await fetch(S("https://guessir-api.k-k.io",`texts/${i}`),{method:"GET"});if(!e.ok)throw new Error("Could not load text");return await e.json()}class F{constructor(e={}){l(this,"containerElement");l(this,"generatedUrl","");l(this,"copiedAlertElement",document.createElement("div"));l(this,"maxTitleLength",0);l(this,"maxDescriptionLength",0);l(this,"maxTextLength",0);const{maxTitleLength:t=500,maxDescriptionLength:s=4e3,maxTextLength:n=4e3}=e;this.containerElement=document.createElement("div"),this.containerElement.id="utils-container",this.maxTitleLength=t,this.maxDescriptionLength=s,this.maxTextLength=n,this.copiedAlertElement.textContent="(copied)",this.initElement()}getElement(){return this.containerElement}initElement(){this.containerElement.innerHTML=`
      <details>
        <summary>Create a new text</summary>
        <div>
          <div class="inline-flex relative">
            <input id="title-input" type="text" placeholder="Title*">
            <div class="limit-text">0/0</div>
          </div>
        </div>
        <div>
          <div class="inline-flex relative">
            <textarea rows="2" class="w-100" id="description-input" placeholder="Description"></textarea>
            <div class="limit-text">0/0</div>
          </div>
        </div>
        <div class="flex relative">
            <textarea rows="5" class="w-100" id="text-input" placeholder="Text*"></textarea>
            <div class="limit-text">0/0</div>
        </div>
        <div class="flex">
          <label>
            <input checked type="checkbox" id="allow-showing-first-letters-checkbox">Allow showing first letters
          </label>
          <br />
          <label>
            <input checked type="checkbox" id="allow-showing-text-checkbox">Allow showing text
          </label>
        </div>
        <div id="generate-url-button-container">
          <div class="relative">
            <div id="generate-url-error" class="error hide"></div>
            <button id="generate-url-button" type="button">Create</button>
          </div>
        </div>
        <div class="hide flex" id="generated-url-container">
          <button id="copy-generated-url-button" type="button">
            ${k}
          </button>
          <a href="#" id="generated-url" target="_blank">#</a>
        </div>
      </details>
    `,this.attachInputHandlers(),this.attachGenerateUrlHandler(),this.attachCopyGeneratedUrlHandler()}getElements(){return M(this.containerElement)}getValues(){const{titleInputElement:e,descriptionInputElement:t,textInputElement:s,allowShowingFirstLettersCheckboxElement:n,allowShowingTextCheckboxElement:r}=this.getElements(),o=e.value.trim(),a=t.value.trim(),h=s.value.trim(),c=n.checked,u=r.checked;return{title:o,description:a||void 0,text:h,allowShowingFirstLetters:c,allowShowingText:u}}limitInputsLength(){const{titleInputElement:e,descriptionInputElement:t,textInputElement:s}=this.getElements(),n=(r,o)=>{var c;let a=r.value.trim();a.length>o&&(a=a.substring(0,o),r.value=a);const h=(c=r.parentElement)==null?void 0:c.querySelector(".limit-text");h&&(h.innerHTML=`${a.length}/${o}`)};n(e,this.maxTitleLength),n(t,this.maxDescriptionLength),n(s,this.maxTextLength)}validateForm(e){const{titleInputElement:t,textInputElement:s}=this.getElements(),{title:n,text:r}=this.getValues(),o=!!(n&&r);return(!e||e===t)&&(n?t.classList.remove("invalid"):t.classList.add("invalid")),(!e||e===s)&&(r?s.classList.remove("invalid"):s.classList.add("invalid")),o}blockForm(e){const{titleInputElement:t,descriptionInputElement:s,textInputElement:n,allowShowingFirstLettersCheckboxElement:r,allowShowingTextCheckboxElement:o,generateUrlButtonElement:a}=this.getElements();[t,s,n,r,o,a].forEach(h=>{h.disabled=e})}cleanForm(){const{titleInputElement:e,descriptionInputElement:t,textInputElement:s,allowShowingFirstLettersCheckboxElement:n,allowShowingTextCheckboxElement:r}=this.getElements();[e,t,s].forEach(o=>{o.value=""}),[n,r].forEach(o=>{o.checked=!0})}attachInputHandlers(){const{titleInputElement:e,descriptionInputElement:t,textInputElement:s,allowShowingFirstLettersCheckboxElement:n,allowShowingTextCheckboxElement:r}=this.getElements();this.limitInputsLength(),[e,t,s].forEach(o=>{o.addEventListener("input",a=>{this.handleInputsChange(a.currentTarget)})}),[n,r].forEach(o=>{v(o,a=>{this.handleInputsChange(a.currentTarget)},{toggleChecked:!0})})}handleInputsChange(e){const{errorElement:t,generatedUrlContainerElement:s}=this.getElements();t.classList.add("hide"),s.classList.add("hide"),this.removeCopyAlert(),this.limitInputsLength(),this.validateForm(e)}attachGenerateUrlHandler(){const{generateUrlButtonElement:e,errorElement:t,generatedUrlContainerElement:s,generatedUrlElement:n}=this.getElements();e.addEventListener("click",()=>{this.validateForm()&&(this.blockForm(!0),s.classList.add("hide"),O(this.getValues()).then(r=>{this.cleanForm(),this.generatedUrl=A(r),s.classList.remove("hide"),n.textContent=this.generatedUrl,n.href=this.generatedUrl}).catch(r=>{console.error(r),t.classList.remove("hide"),t.textContent=r.message}).finally(()=>{this.blockForm(!1)}))})}removeCopyAlert(){const{copyGeneratedUrlButtonElement:e}=this.getElements();e.contains(this.copiedAlertElement)&&e.removeChild(this.copiedAlertElement)}attachCopyGeneratedUrlHandler(){const{copyGeneratedUrlButtonElement:e}=this.getElements();let t;e.addEventListener("click",()=>{navigator.clipboard.writeText(this.generatedUrl),e.appendChild(this.copiedAlertElement),t&&clearTimeout(t),t=setTimeout(()=>{this.removeCopyAlert()},5e3)})}}function M(i){const e=i.querySelector("#title-input"),t=i.querySelector("#description-input"),s=i.querySelector("#text-input"),n=i.querySelector("#allow-showing-first-letters-checkbox"),r=i.querySelector("#allow-showing-text-checkbox"),o=i.querySelector("#generate-url-button"),a=i.querySelector("#generate-url-error"),h=i.querySelector("#generated-url-container"),c=i.querySelector("#generated-url"),u=i.querySelector("#copy-generated-url-button");return{titleInputElement:e,descriptionInputElement:t,textInputElement:s,allowShowingFirstLettersCheckboxElement:n,allowShowingTextCheckboxElement:r,generateUrlButtonElement:o,errorElement:a,generatedUrlContainerElement:h,generatedUrlElement:c,copyGeneratedUrlButtonElement:u}}class B{constructor(e){l(this,"wordLikeCount",0);l(this,"score",0);l(this,"containerElement");const{wordLikeCount:t}=e;this.wordLikeCount=t,this.containerElement=document.createElement("div"),this.containerElement.id="score-container",this.initElement()}getElement(){return this.containerElement}addScore(e){this.score+=e;const{currentScoreElement:t}=this.getElements();t.textContent=this.score.toString()}initElement(){this.containerElement.innerHTML=`
      Score:&nbsp;
      <div id="current-score">${this.score}</div>
      /
      <div id="total-score">${this.wordLikeCount}</div>
    `}getElements(){return{currentScoreElement:this.containerElement.querySelector("#current-score")}}}class N{constructor(e){l(this,"lexeme");l(this,"containerElement");l(this,"userWordShowPubSub",new g);l(this,"isShown",!1);l(this,"userWordShowEvent",this.userWordShowPubSub.event);const{lexeme:t}=e;this.lexeme=t,this.containerElement=document.createElement("button"),this.containerElement.classList.add("lexeme-container"),this.initElement()}getElement(){return this.containerElement}show(){this.isShown=!0,this.containerElement.classList.add("show")}initElement(){this.containerElement.innerHTML=`
      <span class="lexeme">${this.lexeme.normalized}</span>
      <span class="lexeme-first-letter">${this.lexeme.normalized[0]}</span>
    `,this.attachClickHandler()}attachClickHandler(){this.containerElement.addEventListener("click",()=>{this.isShown||(this.show(),this.userWordShowPubSub.publish(this.lexeme))})}}class D{constructor(e){l(this,"containerElement");l(this,"lexemesAnalysis");l(this,"title");l(this,"description");l(this,"userWordShowPubSub",new g);l(this,"wordRenderers",new Map);l(this,"userWordShowEvent",this.userWordShowPubSub.event);const{lexemesAnalysis:t,title:s,description:n}=e;this.lexemesAnalysis=t,this.title=s,this.description=n,this.containerElement=document.createElement("div"),this.containerElement.id="text-container",this.initElement()}getElement(){return this.containerElement}showLexemesByWord(e){const t=this.lexemesAnalysis.lexemesByWordLike.get(e);let s=0;if(!t)return s;for(const[n]of t){const r=this.wordRenderers.get(n);if(!r)continue;const o=r.isShown;r.show(),o||s++}return s}toggleText(e){this.containerElement.classList.remove("show-text","show-first-letters"),e?this.containerElement.classList.add("show-text"):this.containerElement.classList.remove("show-text")}toggleFirstLetters(e){this.containerElement.classList.remove("show-text","show-first-letters"),e?this.containerElement.classList.add("show-first-letters"):this.containerElement.classList.remove("show-first-letters")}initElement(){this.containerElement.innerHTML=`
      <h1 id="title" class="hide"></h1>
      <p id="description" class="hide"></p>
      <div id="lexemes"></div>
    `;const{titleElement:e,descriptionElement:t,lexemesElement:s}=_(this.containerElement);this.title&&(e.classList.remove("hide"),e.textContent=this.title),this.description&&(t.classList.remove("hide"),t.textContent=this.description);for(const[n,r]of this.lexemesAnalysis.lexemes)if(d.isLexemeOtherCharacter(r))s.append(this.wrapSpecialCharacter(r));else{const o=new N({lexeme:r});o.userWordShowEvent.subscribe(a=>this.handleUserWordShow(a)),this.wordRenderers.set(n,o),s.appendChild(o.getElement())}}wrapSpecialCharacter(e){return e.normalized===`
`?document.createElement("br"):e.normalized}handleUserWordShow(e){this.userWordShowPubSub.publish(e)}}function _(i){const e=i.querySelector("#title"),t=i.querySelector("#description"),s=i.querySelector("#lexemes");return{titleElement:e,descriptionElement:t,lexemesElement:s}}class q{constructor(e){l(this,"guessirContainer");l(this,"textRenderer");l(this,"controlsRenderer");l(this,"scoreRenderer");l(this,"utilsRenderer");const{lexemesAnalysis:t,title:s,description:n,allowShowingText:r,allowShowingFirstLetters:o,textRenderer:a,controlsRenderer:h,scoreRenderer:c,createTextRenderer:u}=e;this.guessirContainer=document.createElement("div"),this.guessirContainer.id="guessir",this.textRenderer=a||new D({lexemesAnalysis:t,title:s,description:n}),this.controlsRenderer=h||new I({allowShowingText:r,allowShowingFirstLetters:o}),this.scoreRenderer=c||new B({wordLikeCount:t.wordLikeCount}),this.utilsRenderer=u||new F}init(e){e.appendChild(this.guessirContainer),this.textRenderer.userWordShowEvent.subscribe(t=>this.handleUserWordShow(t)),this.controlsRenderer.guessEvent.subscribe(t=>this.handleGuess(t)),this.controlsRenderer.showTextEvent.subscribe(t=>this.handleShowText(t)),this.controlsRenderer.showFirstLettersEvent.subscribe(t=>this.handleShowFirstLetters(t)),this.guessirContainer.appendChild(this.textRenderer.getElement()),this.guessirContainer.appendChild(this.controlsRenderer.getElement()),this.guessirContainer.appendChild(this.scoreRenderer.getElement()),this.guessirContainer.appendChild(this.utilsRenderer.getElement())}handleUserWordShow(e){this.scoreRenderer.addScore(-1)}handleGuess({word:e}){const t=this.textRenderer.showLexemesByWord(e);t?this.controlsRenderer.clearAndFocusGuessInput():this.controlsRenderer.shakeAndError(),this.scoreRenderer.addScore(t)}handleShowText(e){this.textRenderer.toggleText(e),e&&this.scoreRenderer.addScore(-7)}handleShowFirstLetters(e){this.textRenderer.toggleFirstLetters(e),e&&this.scoreRenderer.addScore(-2)}}const G="Hello!",Z="I am a simple tool to turn any English text into a word guessing game.",$="In order to create your own text find the form below.",z=`
  I could not load the remote text. Please, verify your URL or create a new text.
`;async function V(i){let e=$,t=G,s=Z,n=!0,r=!0;if(H())try{console.log("Trying to load text...");const h=U(),c=await P(h);console.log("Text has been loaded",c),{text:e,title:t,allowShowingText:n,allowShowingFirstLetters:r,description:s}=c}catch(h){console.log("Text has been failed to load",h),console.error(h),e=z}const o=L.analyze(e);new q({lexemesAnalysis:o,title:t,description:s,allowShowingText:n,allowShowingFirstLetters:r}).init(i)}V(document.body);
